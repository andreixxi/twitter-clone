[{"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\index.js":"1","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\reportWebVitals.js":"2","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\App.js":"3","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\SideBar.js":"4","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\SidebarOption.js":"5","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Feed.js":"6","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Widgets.js":"7","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\TweetBox.js":"8","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Post.js":"9","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\firebase.js":"10","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Login.js":"11","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Hero.js":"12","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Helper.js":"13","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\DBSTUFF.js":"14"},{"size":639,"mtime":1609943329064,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":7175,"mtime":1610559946022,"results":"18","hashOfConfig":"16"},{"size":2645,"mtime":1610553343766,"results":"19","hashOfConfig":"16"},{"size":413,"mtime":1610552277778,"results":"20","hashOfConfig":"16"},{"size":2963,"mtime":1610553421849,"results":"21","hashOfConfig":"16"},{"size":1501,"mtime":1610556077868,"results":"22","hashOfConfig":"16"},{"size":1959,"mtime":1610532969551,"results":"23","hashOfConfig":"16"},{"size":5806,"mtime":1610563555376,"results":"24","hashOfConfig":"16"},{"size":792,"mtime":1609674570720,"results":"25","hashOfConfig":"16"},{"size":2391,"mtime":1610559934784,"results":"26","hashOfConfig":"16"},{"size":1227,"mtime":1610554513790,"results":"27","hashOfConfig":"16"},{"size":1474,"mtime":1610362931540,"results":"28","hashOfConfig":"16"},{"size":3043,"mtime":1610186437639,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"xwn6fe",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\index.js",[],["66","67"],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\reportWebVitals.js",[],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\App.js",["68","69","70","71"],"import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport { firebaseApp } from \"./firebase\";\r\nimport Login from \"./Login\";\r\nimport Hero from \"./Hero\";\r\nimport { db } from \"./firebase\";\r\nimport emailjs, { init } from 'emailjs-com';\r\n\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [hasAccount, setHasAccount] = useState(false);\r\n\r\n    var [address, setAddresss] = useState(\"\");\r\n    var [username, setUserName] = useState(\"\"); // nu const!!!\r\n    var [avatar, setAvatar] = useState(\"\");\r\n    var [verified, setVerified] = useState(\"\");\r\n    var [displayname, setDisplayname] = useState(\"\");\r\n\r\n    const clearInputs = () => {\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    const clearErrors = () => {\r\n        setEmailError(\"\");\r\n        setPasswordError(\"\");\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        clearErrors();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .catch(error => {\r\n                switch (error.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        setEmailError(error.message);\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        setPasswordError(error.message);\r\n                        break;\r\n                }\r\n            });\r\n\r\n        db.collection(\"users\").get().then(function (querySnapshot) {\r\n            querySnapshot.forEach(function (doc) {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                //console.log(doc.id, \" => \", doc.data().email);\r\n                var dbEmail = doc.data().email; //emailul curent din bd\r\n                if (email === dbEmail) {//  exista emailul in baza de date \r\n                    username = email.substring(0, email.lastIndexOf(\"@\"));// pentru \"john.doe@email.com\" setez john.doe\r\n                    displayname = 'Clever Lang Quadrilateral ' + username;\r\n                    avatar = 'avatar.png';\r\n                    verified = Math.random() < 0.5;\r\n                    address = email;\r\n\r\n                    setUserName(username); //setez usernameul curent\r\n                    setDisplayname(displayname);\r\n                    setAvatar(avatar);\r\n                    setVerified(verified);\r\n                    setAddresss(email);\r\n                }\r\n            });\r\n\r\n        })\r\n            .catch(function (error) {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    };\r\n\r\n    function sendEmail() {\r\n        init(\"user_T9Jn1YIeD2qZZS2zmpU0K\");\r\n\r\n        emailjs.send(\"gmail\", \"dawntter\", {\r\n            to_name: username,\r\n            to_email: email,\r\n        }).then((result) => {\r\n            console.log(result.text);\r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n    }\r\n\r\n    const handleSignup = () => {\r\n        clearErrors();\r\n        firebaseApp\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .catch(error => {\r\n                switch (error.code) {\r\n                    case \"auth/email-already-in-use\":\r\n                    case \"auth/invalid-email\":\r\n                        setEmailError(error.message);\r\n                        break;\r\n                    case \"auth/weak-password\":\r\n                        setPasswordError(error.message);\r\n                        break;\r\n                }\r\n            });\r\n\r\n        var ok = 1; // presupun ca nu exista emaillul\r\n        db.collection(\"users\").get().then(function (querySnapshot) {\r\n            querySnapshot.forEach(function (doc) {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                //console.log(doc.id, \" => \", doc.data());\r\n                var dbEmail = doc.data().email; //emailul curent din bd\r\n                if (email === dbEmail) {//  exista emailul in baza de date \r\n                    ok = 0;\r\n                }\r\n            });\r\n            //console.log(\"ok dupa cautare\", ok)\r\n            if (ok == 1) { // userul nu se afla in bd, il adaug\r\n                username = email.substring(0, email.lastIndexOf(\"@\"));// pentru \"john.doe@email.com\" setez john.doe\r\n                displayname = 'Clever Lang Quadrilateral ' + username;\r\n                avatar = 'avatar.png';\r\n                verified = Math.random() < 0.5;\r\n                address = email;\r\n\r\n                db.collection(\"users\")\r\n                    .add({\r\n                        email: email,\r\n                        password: password, //probabil de sters hehe\r\n                        username: username, // calculat mai sus\r\n                        displayname: displayname,\r\n                        avatar: avatar,\r\n                        verified: verified\r\n                    });\r\n                setEmail(email);\r\n                setUserName(username);\r\n                setDisplayname(displayname);\r\n                setAvatar(avatar);\r\n                setVerified(verified);\r\n                setAddresss(address);\r\n\r\n                sendEmail();\r\n            }\r\n        })\r\n            .catch(function (error) {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        firebaseApp.auth().signOut();\r\n    };\r\n\r\n    const authListener = () => {\r\n        firebaseApp.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                clearInputs();\r\n                setUser(user);\r\n            } else {\r\n                setUser(\"\");\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        authListener();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {user ? (\r\n                <div>\r\n                    <Hero\r\n                        handleLogout={handleLogout}\r\n                        address={address}\r\n                        username={username}\r\n                        displayname={displayname}\r\n                        avatar={avatar}\r\n                        verified={verified}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                    <div>\r\n                        <Login\r\n                            email={email}\r\n                            setEmail={setEmail}\r\n                            password={password}\r\n                            setPassword={setPassword}\r\n                            handleLogin={handleLogin}\r\n                            handleSignup={handleSignup}\r\n                            hasAccount={hasAccount}\r\n                            setHasAccount={setHasAccount}\r\n                            emailError={emailError}\r\n                            passwordError={passwordError}\r\n                        />\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\SideBar.js",["72","73","74","75","76","77","78","79","80","81","82"],"﻿import React from \"react\";\r\nimport './Sidebar.css';\r\nimport './SidebarOption.css';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport MoreIcon from '@material-ui/icons/More';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { MDBIcon } from 'mdbreact';\r\n\r\nfunction Sidebar() {\r\n    return (\r\n\r\n        <div className=\"sidebar\">\r\n            {/* twitter icon*/}\r\n            <TwitterIcon className=\"sidebar__twitterIcon\" /><br />\r\n\r\n            {/* sidebar options*/}\r\n            <div className=\"myHover\">\r\n                <h2 className=\"sidebarOption myHover--off\"><MDBIcon icon=\"igloo\" />&nbsp;&nbsp;Home</h2>\r\n                <h2 class=\"text-white\" ><span className=\"myHover--on\" role=\"img\" aria-label=\"house\">you are 🏠 no big app here</span></h2>\r\n            </div>\r\n            <div className=\"myHover\">\r\n                <h2 className=\"sidebarOption myHover--off\"><MDBIcon far icon=\"bell\" /> &nbsp;&nbsp;Notifications</h2>\r\n                <h2 class=\"text-white\" ><span className=\"myHover--on\"role=\"img\" aria-label=\"crickets\">🦗CRICKETS🦗</span></h2>\r\n            </div>\r\n            <div className=\"myHover\">\r\n                <h2 className=\"sidebarOption myHover--off\"><MDBIcon far icon=\"envelope\" />&nbsp;&nbsp;Messages</h2>\r\n                <h2 class=\"text-white\" ><span className=\"myHover--on\" role=\"img\" aria-label=\"speech\">NO BUDGET FOR 💬 </span></h2>\r\n            </div>\r\n            <div className=\"myHover\">\r\n                <h2 className=\"sidebarOption myHover--off\"><MDBIcon far icon=\"user-circle\" />&nbsp;&nbsp;Profile</h2>\r\n                <h2 class=\"text-white\" ><span className=\"myHover--on\" role=\"img\" aria-label=\"shrug\">NO PROFILE YET!! 🤷‍♂️</span></h2>\r\n            </div>\r\n            <div className=\"myHover\">\r\n                <h3 className=\"sidebarOption myHover--off\"><MDBIcon icon=\"chevron-circle-down\" />&nbsp;&nbsp;more more more and more</h3>\r\n                <h3 class=\"text-white\" ><span className=\"myHover--on\" role=\"img\" aria-label=\"shrug\">did you not have enough?🤷‍♂️</span></h3>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar; // use it outside the sidebar","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\SidebarOption.js",[],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Feed.js",["83","84"],"import React from \"react\";\r\nimport './Feed.css';\r\nimport { TweetBox } from \"./TweetBox\";\r\nimport Post from './Post';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed(props) {\r\n    const {\r\n        address,\r\n        username,\r\n        displayname,\r\n        avatar,\r\n        verified\r\n    } = props;\r\n\r\n    var [posts, setPosts] = useState([]);\r\n    var [userID, setID] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // aici sa iau postarile de la userul logat !!!!!!!! TODO (atat afisarea, cat si poisbilitatea de a posta)\r\n        const fetch = async () => {\r\n           await db.collection(\"users\").get().then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    //console.log(doc.id, \" => \", doc.data());\r\n                    var dbEmail = doc.data().email; //emailul curent din bd\r\n                    if (address === dbEmail) {// emailul primit coincide cu emailul in baza de date \r\n                        //console.log(username, doc.id);\r\n                        userID = doc.id;\r\n                        setID(userID); // retin id ul userului logat  \r\n                    }\r\n                });\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n\r\n            await db.collection(\"posts\").where(\"creator\", \"==\", userID) // gets posts from the db\r\n                .onSnapshot((snapshot) =>\r\n                    setPosts(snapshot.docs.map((doc) => doc.data())) // for every doc(post) map the data(posts' fields)\r\n                );\r\n        }\r\n        fetch();\r\n    }, []);\r\n\r\n    //get the post id\r\n    var postID = null;\r\n    db.collection(\"posts\").where(\"creator\", \"==\", userID)\r\n        .get()\r\n        .then(function (querySnapshot) {\r\n            querySnapshot.forEach(function (doc) {\r\n                postID = doc.id;\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });;\r\n\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            {/*header*/}\r\n            <div className=\"feed__header\">\r\n                <h2>Home</h2>\r\n            </div>\r\n\r\n            {/*tweet box*/}\r\n            <TweetBox\r\n                userID={userID}\r\n            />\r\n\r\n            <FlipMove>\r\n                {/*posts*/}\r\n                {posts.map((post) => (\r\n                    <Post\r\n                        displayName={displayname}\r\n                        //key={postID}\r\n                        username={username}\r\n                        verified={verified}\r\n                        text={post.text}\r\n                        avatar={avatar}\r\n                        image={post.image}\r\n                    />\r\n                ))}\r\n            </FlipMove>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Widgets.js",[],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\TweetBox.js",["85","86","87"],"import React from \"react\";\r\nimport \"./TweetBox.css\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { db } from './firebase';\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst TweetBox = (props) => {\r\n    const { //username,\r\n        userID\r\n    } = props;\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    const [tweetMedia, setTweetMedia] = useState(\"\");\r\n\r\n    const sendTweet = (e) => {\r\n        e.preventDefault(); //prevents refresh\r\n\r\n        if (tweetMessage == \"\") //pt a evita tweeturi goale \r\n            alert('no empty tweets')\r\n        else {\r\n            db.collection(\"posts\").add({\r\n                creator: userID,\r\n                text: tweetMessage,\r\n                image: tweetMedia,\r\n            });\r\n        }\r\n        setTweetMessage(\"\");//reset\r\n        setTweetMedia(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            <form>\r\n                <div className=\"tweetBox__input\">\r\n                    <Avatar src=\"avatar.png\" />\r\n                    <input\r\n                        onChange={(e) => setTweetMessage(e.target.value)}\r\n                        value={tweetMessage}\r\n                        placeholder=\"Hey DAWN! What's going on?\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n\r\n                <input\r\n                    onChange={(e) => setTweetMedia(e.target.value)}\r\n                    value={tweetMedia}\r\n                    className=\"tweetBox__imageInput\"\r\n                    placeholder=\"insert image URL for a fancy tweet\"\r\n                    type=\"text\"\r\n                />\r\n\r\n                <MDBBtn rounded color=\"info\" onClick={sendTweet} ><MDBIcon far icon=\"gem\" className=\"mr-2\" />Tweet  <MDBIcon far icon=\"gem\" className=\"mr-2\" /></ MDBBtn>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nexport { TweetBox };","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Post.js",["88","89","90","91","92","93","94","95","96","97","98"],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\firebase.js",[],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Login.js",[],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Hero.js",["99"],"import React from \"react\";\r\nimport Sidebar from './SideBar';\r\nimport Feed from './Feed';\r\nimport Widgets from './Widgets';\r\nimport { firebaseApp } from \"./firebase\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nconst Hero = (props) => {\r\n    const { handleLogout,\r\n        address,\r\n        username,\r\n        displayname,\r\n        avatar,\r\n        verified\r\n    } = props;\r\n\r\n    return (\r\n        <section className=\"hero\">\r\n            <nav>\r\n                <h1 class=\"text-white\"><MDBIcon far icon=\"star\" /> Welcome, {username}! <MDBIcon far icon=\"star\" /></h1>\r\n                <button onClick={handleLogout} >Log out</button>\r\n            </nav>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <Sidebar className=\"col-2\" />\r\n                    <Feed className=\"col-6\"\r\n                        address={address}\r\n                        username={username}\r\n                        displayname={displayname}\r\n                        avatar={avatar}\r\n                        verified={verified}\r\n                    />\r\n                    <Widgets className=\"col-2\" />\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default Hero;","C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\Helper.js",["100"],"import { db } from \"./firebase\";\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Helper() {\r\n    const [users, setUsers] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await db.collection(\"users\").get();\r\n            setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n            console.log(users);\r\n\r\n            for (var i = 0; i < users.entries(); i++) { \r\n            alert(i);\r\n        }\r\n\r\n            // in loc de 1 sa iau idul userilor\r\n            const posts = await db.collection(\"users\").doc('1').collection(\"posts\").get();\r\n            setPosts(posts.docs.map(doc => doc.data()));\r\n            console.log(posts)\r\n           \r\n            } \r\n        \r\n        fetchData()\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {users.map(user => (\r\n\r\n                posts.map(post => (\r\n                    <div>\r\n                        <li key={user.id}> id: {user.id} </li>\r\n                        <li key={user.email}> email: {user.email} </li>\r\n                        <li key={user.password}> pass: {user.password} </li>\r\n\r\n                        <li key={post.text}> {post.text} </li>\r\n                        <li key={post.username}> {post.username} </li>\r\n                        <li></li>\r\n                </div>\r\n                ))))\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Helper;",["101","102"],"C:\\Users\\andrei\\Desktop\\an3\\daw\\TwitterClone\\twitter-clone\\src\\DBSTUFF.js",["103","104","105","106","107","108","109","110","111","112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":40,"column":17,"nodeType":"121","messageId":"122","endLine":49,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":97,"column":17,"nodeType":"121","messageId":"122","endLine":105,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":119,"column":20,"nodeType":"125","messageId":"126","endLine":119,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":168,"column":8,"nodeType":"129","endLine":168,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":1,"nodeType":"133","messageId":"126","fix":"134"},{"ruleId":"135","severity":1,"message":"136","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":21},{"ruleId":"135","severity":1,"message":"139","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":16},{"ruleId":"135","severity":1,"message":"140","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":18},{"ruleId":"135","severity":1,"message":"141","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":29},{"ruleId":"135","severity":1,"message":"142","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":23},{"ruleId":"135","severity":1,"message":"143","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":26},{"ruleId":"135","severity":1,"message":"144","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":19},{"ruleId":"135","severity":1,"message":"145","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":24},{"ruleId":"135","severity":1,"message":"146","line":13,"column":8,"nodeType":"137","messageId":"138","endLine":13,"endColumn":16},{"ruleId":"135","severity":1,"message":"147","line":14,"column":10,"nodeType":"137","messageId":"138","endLine":14,"endColumn":16},{"ruleId":"127","severity":1,"message":"148","line":31,"column":34,"nodeType":"149","endLine":31,"endColumn":40},{"ruleId":"135","severity":1,"message":"150","line":54,"column":17,"nodeType":"137","messageId":"138","endLine":54,"endColumn":23},{"ruleId":"135","severity":1,"message":"147","line":3,"column":18,"nodeType":"137","messageId":"138","endLine":3,"endColumn":24},{"ruleId":"135","severity":1,"message":"151","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":20,"column":26,"nodeType":"125","messageId":"126","endLine":20,"endColumn":28},{"ruleId":"135","severity":1,"message":"152","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":29},{"ruleId":"135","severity":1,"message":"153","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":18},{"ruleId":"135","severity":1,"message":"154","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":20},{"ruleId":"135","severity":1,"message":"155","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"156","line":11,"column":20,"nodeType":"137","messageId":"138","endLine":11,"endColumn":29},{"ruleId":"135","severity":1,"message":"157","line":12,"column":10,"nodeType":"137","messageId":"138","endLine":12,"endColumn":12},{"ruleId":"158","severity":1,"message":"159","line":16,"column":5,"nodeType":"160","messageId":"161","endLine":57,"endColumn":6},{"ruleId":"135","severity":1,"message":"162","line":62,"column":14,"nodeType":"137","messageId":"138","endLine":62,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":63,"column":15,"nodeType":"125","messageId":"126","endLine":63,"endColumn":17},{"ruleId":"135","severity":1,"message":"163","line":73,"column":14,"nodeType":"137","messageId":"138","endLine":73,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":74,"column":16,"nodeType":"125","messageId":"126","endLine":74,"endColumn":18},{"ruleId":"135","severity":1,"message":"164","line":5,"column":10,"nodeType":"137","messageId":"138","endLine":5,"endColumn":21},{"ruleId":"127","severity":1,"message":"165","line":26,"column":8,"nodeType":"129","endLine":26,"endColumn":10,"suggestions":"166"},{"ruleId":"115","replacedBy":"167"},{"ruleId":"117","replacedBy":"168"},{"ruleId":"135","severity":1,"message":"169","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"170","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":19},{"ruleId":"135","severity":1,"message":"171","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":12},{"ruleId":"135","severity":1,"message":"172","line":8,"column":9,"nodeType":"137","messageId":"138","endLine":8,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":13,"column":23,"nodeType":"125","messageId":"126","endLine":13,"endColumn":25},{"ruleId":"135","severity":1,"message":"173","line":28,"column":9,"nodeType":"137","messageId":"138","endLine":28,"endColumn":13},{"ruleId":"135","severity":1,"message":"174","line":29,"column":9,"nodeType":"137","messageId":"138","endLine":29,"endColumn":14},{"ruleId":"135","severity":1,"message":"175","line":32,"column":12,"nodeType":"137","messageId":"138","endLine":32,"endColumn":17},{"ruleId":"135","severity":1,"message":"172","line":33,"column":12,"nodeType":"137","messageId":"138","endLine":33,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":49,"column":28,"nodeType":"125","messageId":"126","endLine":49,"endColumn":30},{"ruleId":"176","severity":1,"message":"177","line":51,"column":27,"nodeType":"178","messageId":"179","endLine":51,"endColumn":66},{"ruleId":"135","severity":1,"message":"180","line":62,"column":13,"nodeType":"137","messageId":"138","endLine":62,"endColumn":20},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["183"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"184","text":"185"},"no-unused-vars","'SidebarOption' is defined but never used.","Identifier","unusedVar","'HomeIcon' is defined but never used.","'SearchIcon' is defined but never used.","'NotificationsNoneIcon' is defined but never used.","'MailOutlineIcon' is defined but never used.","'BookmarkBorderIcon' is defined but never used.","'SubjectIcon' is defined but never used.","'PermIdentityIcon' is defined but never used.","'MoreIcon' is defined but never used.","'Button' is defined but never used.","Assignments to the 'userID' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'postID' is assigned a value but never used.","'makeStyles' is defined but never used.","'ChatBubbleOutlineIcon' is defined but never used.","'RepeatIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'PublishIcon' is defined but never used.","'useEffect' is defined but never used.","'db' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'like' is defined but never used.","'retweet' is defined but never used.","'firebaseApp' is defined but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["186"],["181"],["182"],"'React' is defined but never used.","'sendTweet' is defined but never used.","'Post' is defined but never used.","'users' is assigned a value but never used.","'text' is assigned a value but never used.","'image' is assigned a value but never used.","'posts' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'user_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},[-1,0],"",{"desc":"189","fix":"190"},"Update the dependencies array to be: [authListener]",{"range":"191","text":"192"},"Update the dependencies array to be: [users]",{"range":"193","text":"194"},[5987,5989],"[authListener]",[833,835],"[users]"]